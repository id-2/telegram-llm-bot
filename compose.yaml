x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2023-09-16T01-01-47Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
    # environment:
    # MINIO_ROOT_USER: minioadmin
    # MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
    interval: 30s
    timeout: 20s
    retries: 3



services:
  smart-bots-minio:
    <<: *minio-common
    hostname: minio1
    volumes:
      - dataminio:/data
  smart-bots-mongo:
    env_file: .env
    image: mongo:latest
    container_name: smart-bots-mongo
    command: mongod --port ${MONGO_PORT}
    expose:
      - ${MONGO_PORT}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - dbdata6:/data/db
  idea-sparring-bot:
    env_file:
      - .env
      - src/telegram_smart_bots/bots/idea_sparring/.env
    command: poetry run python3 /app/src/telegram_smart_bots/app.py
    volumes:
      - type: bind
        source: src/telegram_smart_bots/logs
        target: /app/src/telegram_smart_bots/logs
    build:
      context: .
      dockerfile: src/telegram_smart_bots/bots/idea_sparring/Dockerfile
    container_name: idea-sparring-bot
    restart: "no"
  voice-journal-bot:
    env_file:
      - .env
      - src/telegram_smart_bots/bots/voice_journal/.env
    command: poetry run python3 /app/src/telegram_smart_bots/app.py
    volumes:
      - type: bind
        source: src/telegram_smart_bots/logs
        target: /app/src/telegram_smart_bots/logs
    build:
      context: .
      dockerfile: src/telegram_smart_bots/bots/voice_journal/Dockerfile
    container_name: voice-journal-bot
    restart: "no"
volumes:
  dbdata6:
  dataminio:
